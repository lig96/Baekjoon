# 말의 움직임을 간소화하면 다음과 같이
# (+1, +2, +3) + (+1, -2, -3) = (+2, 0, 0)
# (-1, -2, -3) + (+2, +3, +1) = (+1, +1, -2) -> (+1, +1, 0)
# (2, 0, 0)과 (1, 1, 0)로 이동할 수 있다는 점을 알 수 있다.
# 한 방향으로만 2를 움직일 수 있으니 모든 좌표에 대해
# %2를 해주면 아래와 같은 경우의 수가 나온다.
# 총 경우의 수 = 000, 001, 010, 011, 100, 101, 110, 111
# 합이 0인 경우의 수 = 000
# 합이 1인 경우의 수 = 001, 010, 100
# 합이 2인 경우의 수 = 011, 101, 110
# 합이 3인 경우의 수 = 111
# 또한 111 -> 001이 되므로
# 합이 짝수인 경우의 수 = 000, 011, 101, 110
# 합이 홀수인 경우의 수 = 001, 010, 100, 111
# 이 되고 전자는 도착이 가능하다.
# 후자의 도착 가능성은 다소 애매하지만
# 예제로부터 불가능하다는 점을 알 수 있다.
#
# x = sum(xi, yi, zi)라고 해보자.
# t=0일 때 x=0이고 x%2=0, 즉 짝수이다.
# 한 번의 이동 후에도 반드시 x%2=0, 즉 짝수이다.
# 즉 x%2=1인 지점은 절대 도착할 수 없다.
# 짝수 지점의 도착 가능성은 다소 애매하다.


import sys
input = sys.stdin.readline
sys_print = sys.stdout.write


N = int(input())
questions = [list(map(int, input().split())) for _ in range(N)]


for question in questions:
    ans = "YES" if sum(question) % 2 == 0 else "NO"
    sys_print(ans+'\n')
